<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{ title || 'Ad Reporting Tool' }}</title>
    <meta name="csrf-token" content="{{ csrfToken }}">
    @vite(['resources/js/app.js'])
    <link href="/css/fontawesome.css" rel="stylesheet" />
    @if ($slots.meta)
      {{{ await $slots.meta() }}}
    @endif
  </head>
  <body class="bg-gray-50 font-sans">
    <div id="app">
      @if(auth && auth.isAuthenticated)
        <!-- Navigation Bar -->
        <nav class="bg-white shadow-lg border-b border-gray-200">
          <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
              <div class="flex items-center">
                <a
                  href="{{ route('dashboard.index') }}"
                  class="flex items-center text-xl font-bold text-gray-900 hover:text-blue-600 transition-colors"
                >
                  <i class="fas fa-chart-bar text-blue-600 mr-2"></i>
                  Ad Reporting
                </a>
              </div>

              <div class="flex items-center space-x-4">
                <a href="{{ route('dashboard.index') }}" class="text-gray-700 hover:text-blue-600">Dashboard</a>
                <a href="{{ route('integrations.index') }}" class="text-gray-700 hover:text-blue-600">Integrations</a>
                <a href="#" class="text-gray-700 hover:text-blue-600">Reports</a>

                <div class="relative">
                  <form method="POST" action="{{ route('auth.logout') }}" class="inline ml-4">
                    {{ csrfField() }}
                    <button type="submit" class="text-red-600 hover:text-red-800">
                      <i class="fas fa-sign-out-alt"></i>Logout
                    </button>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </nav>
      @end
      
      <!-- Flash Messages -->
      @if(flashMessages && flashMessages.has && flashMessages.has('success'))
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4" role="alert" aria-live="polite">
          <i class="fas fa-check-circle mr-2" aria-hidden="true"></i>
          {{ flashMessages.get('success') }}
        </div>
      @end
      
      @if(flashMessages && flashMessages.has && flashMessages.has('error'))
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4" role="alert" aria-live="polite">
          <i class="fas fa-exclamation-circle mr-2" aria-hidden="true"></i>
          {{ flashMessages.get('error') }}
        </div>
      @end
      
      <!-- Main Content -->
      <main class="{{ (auth && auth.isAuthenticated) ? 'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8' : '' }}">
        {{{ await $slots.main() }}}
      </main>
    </div>

    <!-- Global JavaScript for integrations -->
    <script>
      // Integration helper functions
      window.syncAccount = function(accountId) {
        if (confirm('Are you sure you want to sync this account? This may take a few moments.')) {
          const button = event.target.closest('button');
          const originalContent = button.innerHTML;
          button.disabled = true;
          button.innerHTML = '<i class="fas fa-spinner fa-spin mr-1"></i>Syncing...';
          
          fetch(`/integrations/sync/${accountId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            }
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              window.location.reload();
            } else {
              alert('Failed to sync account: ' + (data.message || 'Unknown error'));
              button.disabled = false;
              button.innerHTML = originalContent;
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Failed to sync account. Please try again.');
            button.disabled = false;
            button.innerHTML = originalContent;
          });
        }
      };

      window.disconnectAccount = function(accountId, redirectTo = null) {
        if (confirm('Are you sure you want to disconnect this account? This will stop data synchronization.')) {
          const button = event.target.closest('button');
          const originalContent = button.innerHTML;
          button.disabled = true;
          button.innerHTML = '<i class="fas fa-spinner fa-spin mr-1"></i>Disconnecting...';
          
          fetch(`/integrations/disconnect/${accountId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            }
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              if (redirectTo) {
                window.location.href = redirectTo;
              } else {
                window.location.reload();
              }
            } else {
              alert('Failed to disconnect account: ' + (data.message || 'Unknown error'));
              button.disabled = false;
              button.innerHTML = originalContent;
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Failed to disconnect account. Please try again.');
            button.disabled = false;
            button.innerHTML = originalContent;
          });
        }
      };

      window.connectPlatform = function(platformName) {
        const button = event.target;
        const originalText = button.innerHTML;
        button.innerHTML = '<i class="fas fa-spinner fa-spin mr-1"></i>Connecting...';
        button.disabled = true;
        
        fetch('/integrations/connect', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
          },
          body: JSON.stringify({
            platform: platformName
          })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success && data.redirectUrl) {
            // Redirect to OAuth URL
            window.location.href = data.redirectUrl;
          } else {
            alert('Failed to initiate connection: ' + (data.message || 'Unknown error'));
            button.innerHTML = originalText;
            button.disabled = false;
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Failed to connect platform. Please try again.');
          button.innerHTML = originalText;
          button.disabled = false;
        });
      };
    </script>
  </body>
</html>
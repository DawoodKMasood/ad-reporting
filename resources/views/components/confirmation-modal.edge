<div id="{{ id }}" class="fixed inset-0 z-50 hidden overflow-y-auto" role="dialog" aria-modal="true" aria-labelledby="{{ id }}-title" aria-describedby="{{ id }}-description">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <!-- Background overlay -->
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
    
    <!-- This element is to trick the browser into centering the modal contents. -->
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
    
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
            <i class="fas fa-exclamation-triangle text-red-600"></i>
          </div>
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
            <h3 class="text-lg leading-6 font-medium text-gray-900" id="{{ id }}-title">
              {{ title || 'Confirm Action' }}
            </h3>
            <div class="mt-2">
              <p class="text-sm text-gray-500" id="{{ id }}-description">
                {{ message || 'Are you sure you want to perform this action?' }}
              </p>
            </div>
          </div>
        </div>
      </div>
      <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button type="button" 
                class="confirm-btn w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 text-base font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm {{ confirmButtonClass || 'bg-red-600 hover:bg-red-700 focus:ring-red-500' }}">
          {{ confirmButtonText || 'Confirm' }}
        </button>
        <button type="button" 
                class="cancel-btn mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
          {{ cancelButtonText || 'Cancel' }}
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  (function() {
    // Get the modal element
    const modal = document.getElementById('{{ id }}');
    
    // Function to show the modal
    function showModal() {
      modal.classList.remove('hidden');
      // Focus the confirm button for accessibility
      modal.querySelector('.confirm-btn').focus();
      // Prevent body scroll when modal is open
      document.body.style.overflow = 'hidden';
    }
    
    // Function to hide the modal
    function hideModal() {
      modal.classList.add('hidden');
      // Re-enable body scroll
      document.body.style.overflow = '';
    }
    
    // Add event listeners to the buttons
    modal.querySelector('.cancel-btn').addEventListener('click', function() {
      hideModal();
      // Call the onCancel callback if provided
      if (typeof window['{{ id }}_onCancel'] === 'function') {
        window['{{ id }}_onCancel']();
      }
    });
    
    modal.querySelector('.confirm-btn').addEventListener('click', function() {
      hideModal();
      // Call the onConfirm callback if provided
      if (typeof window['{{ id }}_onConfirm'] === 'function') {
        window['{{ id }}_onConfirm']();
      }
    });
    
    // Close modal when clicking on the background overlay
    modal.querySelector('.fixed.inset-0').addEventListener('click', function() {
      hideModal();
      // Call the onCancel callback if provided
      if (typeof window['{{ id }}_onCancel'] === 'function') {
        window['{{ id }}_onCancel']();
      }
    });
    
    // Close modal when pressing Escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
        hideModal();
        // Call the onCancel callback if provided
        if (typeof window['{{ id }}_onCancel'] === 'function') {
          window['{{ id }}_onCancel']();
        }
      }
    });
    
    // Make showModal function globally accessible
    window['{{ id }}_show'] = showModal;
  })();
</script>